local var_0_0 = class("PrepControllerCommand", pm.SimpleCommand)

function var_0_0.execute(arg_1_0, arg_1_1)
	arg_1_0.facade:registerCommand(GAME.LOAD_CONTEXT, LoadContextCommand)
	arg_1_0.facade:registerCommand(GAME.LOAD_SCENE, LoadSceneCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_SCENE, ChangeSceneCommand)
	arg_1_0.facade:registerCommand(GAME.RELOAD_SCENE, ReloadSceneCommand)
	arg_1_0.facade:registerCommand(GAME.GO_BACK, GoBackCommand)
	arg_1_0.facade:registerCommand(GAME.REMOVE_LAYERS, RemoveLayersCommand)
	arg_1_0.facade:registerCommand(GAME.LOAD_LAYERS, LoadLayersCommand)
	arg_1_0.facade:registerCommand(GAME.USER_LOGIN, UserLoginCommand)
	arg_1_0.facade:registerCommand(GAME.USER_REGISTER, UserRegisterCommand)
	arg_1_0.facade:registerCommand(GAME.SERVER_LOGIN, ServerLoginCommand)
	arg_1_0.facade:registerCommand(GAME.CREATE_NEW_PLAYER, CreateNewPlayerCommand)
	arg_1_0.facade:registerCommand(GAME.LOAD_PLAYER_DATA, LoadPlayerDataCommand)
	arg_1_0.facade:registerCommand(GAME.SERVER_INTERCOMMECTION, ServerInterconnectionCommand)
	arg_1_0.facade:registerCommand(GAME.LOGOUT, LogoutCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_PLAYER_NAME, ChangePlayerNameCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_PLAYER_ICON, ChangePlayerIconCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_PLAYER_MANIFESTO, ChangeManifestoCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_PLAYER_MEDAL_DISPLAY, ChangeMedalDisplayCommand)
	arg_1_0.facade:registerCommand(GAME.HARVEST_RES, HarvestResourceCommand)
	arg_1_0.facade:registerCommand(GAME.HARVEST_CLASS_RES, HarvestClassResourceCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_GUIDE_INDEX, UpdateGuideIndexCommand)
	arg_1_0.facade:registerCommand(GAME.ZERO_HOUR, ZeroHourCommand)
	arg_1_0.facade:registerCommand(GAME.FOUR_HOUR, FourHourCommand)
	arg_1_0.facade:registerCommand(GAME.GET_PLAYER_SUMMARY_INFO, GetSummaryInfoCommand)
	arg_1_0.facade:registerCommand(GAME.ON_PLAYER_RES_CHANGE, PlayerResChangeCommand)
	arg_1_0.facade:registerCommand(GAME.GET_SHIP_CNT, GetShipCntCommand)
	arg_1_0.facade:registerCommand(GAME.RANDOM_FLAG_SHIP, RandomFlagshipCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_RANDOM_SHIP_MODE, ChangeRandomFlagShipModeCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_RANDOM_SHIPS, ChangeRandomFlagShipsCommand)
	arg_1_0.facade:registerCommand(GAME.TRACK, TrackCommand)
	arg_1_0.facade:registerCommand(GAME.NEW_TRACK, NewTrackingCommand)
	arg_1_0.facade:registerCommand(GAME.MAIN_SCENE_TRACK, MainSceneTrackingCommand)
	arg_1_0.facade:registerCommand(GAME.UR_EXCHANGE_TRACK, UrExchangeTrackingCommand)
	arg_1_0.facade:registerCommand(GAME.UNLOCK_CRYPTOLALIA, UnlockCryptolaliaCommand)
	arg_1_0.facade:registerCommand(GAME.CHEATER_MARK, CheaterMarkCommand)
	arg_1_0.facade:registerCommand(GAME.COMMON_FLAG, UpdateCommonFlagCommand)
	arg_1_0.facade:registerCommand(GAME.CANCEL_COMMON_FLAG, CancelCommonFlagCommand)
	arg_1_0.facade:registerCommand(GAME.BUILD_SHIP, BuildShipCommand)
	arg_1_0.facade:registerCommand(GAME.BUILD_SHIP_IMMEDIATELY, BuildShipImmediatelyCommand)
	arg_1_0.facade:registerCommand(GAME.GET_SHIP, GetShipCommand)
	arg_1_0.facade:registerCommand(GAME.DESTROY_SHIPS, DestroyShipsCommand)
	arg_1_0.facade:registerCommand(GAME.UPGRADE_STAR, UpgradeStarCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_TO_SHIP, EquipToShipCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_FROM_SHIP, EquipFromShipCommand)
	arg_1_0.facade:registerCommand(GAME.UNEQUIP_FROM_SHIP, UnequipFromShipCommand)
	arg_1_0.facade:registerCommand(GAME.UNEQUIP_FROM_SHIP_ALL, UnEquipFromShipAllCommand)
	arg_1_0.facade:registerCommand(GAME.SHIP_EQUIP_ALL_CHANGE, ShipEquipAllChangeCommand)
	arg_1_0.facade:registerCommand(GAME.REMOULD_SHIP, RemouldShipCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_LOCK, UpdateShipLockCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_PREFERENCE, UpdateShipPreferenceTagCommand)
	arg_1_0.facade:registerCommand(GAME.MOD_SHIP, ModShipCommand)
	arg_1_0.facade:registerCommand(GAME.CONFIRM_GET_SHIP, GetShipConfirmCommand)
	arg_1_0.facade:registerCommand(GAME.SUPPORT_SHIP, SupportShipCommand)
	arg_1_0.facade:registerCommand(GAME.LIKE_SHIP, LikeShipCommand)
	arg_1_0.facade:registerCommand(GAME.EVALUATE_SHIP, EvaluateShipCommand)
	arg_1_0.facade:registerCommand(GAME.ZAN_SHIP_EVALUATION, ZanShipEvaCommand)
	arg_1_0.facade:registerCommand(GAME.IMPEACH_SHIP_EVALUATION, ImpeachShipEvaCommand)
	arg_1_0.facade:registerCommand(GAME.FETCH_EVALUATION, FetchEvaluationCommand)
	arg_1_0.facade:registerCommand(GAME.SET_SHIP_SKIN, SetShipSkinCommand)
	arg_1_0.facade:registerCommand(GAME.PROPOSE_SHIP, ProposeCommand)
	arg_1_0.facade:registerCommand(GAME.PROPOSE_REGISTER_SHIP, ProposeRegiesterShipCommand)
	arg_1_0.facade:registerCommand(GAME.PROPOSE_EXCHANGE_RING, ProposeExchangeRingCommand)
	arg_1_0.facade:registerCommand(GAME.RENAME_SHIP, RenameShipCommand)
	arg_1_0.facade:registerCommand(GAME.REQ_PLAYER_ASSIST_SHIP, ReqPlayerAssistShipCommand)
	arg_1_0.facade:registerCommand(GAME.RECORD_SHIP_EQUIPMENT, RecordShipEquipmentCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_EQUIPMENTSKIN_TO_SHIP, UpdateShipEquipmentSkinCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_EQUIPMENTSKIN_FROM_SHIP, EquipESkinFormShipCommand)
	arg_1_0.facade:registerCommand(GAME.UPGRADE_MAX_LEVEL, UpgradeShipMaxLevelCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_CODE_REQUEST, EquipCodeRequestCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_CODE_SHARE, EquipCodeShareCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_CODE_LIKE, EquipCodeLikeCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_CODE_IMPEACH, EquipCodeImpeachCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_FLEET, UpdateFleetCommand)
	arg_1_0.facade:registerCommand(GAME.RENAME_FLEET, RenameFleetCommand)
	arg_1_0.facade:registerCommand(GAME.QUICK_REPAIR_SHIPS, RepairShipsCommand)
	arg_1_0.facade:registerCommand(GAME.DESTROY_EQUIPMENTS, DestroyEquipmentsCommand)
	arg_1_0.facade:registerCommand(GAME.COMPOSITE_EQUIPMENT, CompositeEquipmentCommand)
	arg_1_0.facade:registerCommand(GAME.UPGRADE_EQUIPMENTS, UpGradeEquipmentCommand)
	arg_1_0.facade:registerCommand(GAME.REVERT_EQUIPMENT, RevertEquipmentCommand)
	arg_1_0.facade:registerCommand(GAME.TRANSFORM_EQUIPMENT, TransformEquipmentCommand)
	arg_1_0.facade:registerCommand(GAME.ATTIRE_APPLY, AttireApplyCommand)
	arg_1_0.facade:registerCommand(GAME.HANDLE_OVERDUE_ATTIRE, HandleOverDueAttireCommand)
	arg_1_0.facade:registerCommand(GAME.CHAPTER_OP, ChapterOpCommand)
	arg_1_0.facade:registerCommand(GAME.CHAPTER_BATTLE_RESULT_REQUEST, ChapterBattleResultRequestCommand)
	arg_1_0.facade:registerCommand(GAME.TRACKING, TrackingCommand)
	arg_1_0.facade:registerCommand(GAME.BEGIN_STAGE, BeginStageCommand)
	arg_1_0.facade:registerCommand(GAME.FINISH_STAGE, FinishStageCommand)
	arg_1_0.facade:registerCommand(GAME.AUTO_BOT, AutoBotCommand)
	arg_1_0.facade:registerCommand(GAME.AUTO_SUB, AutoSubCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_CUSTOM_FLEET, UpdateCustomFleetCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CHAPTER_DROP_SHIP_LIST, GetChapterDropShipListCommand)
	arg_1_0.facade:registerCommand(GAME.DAILY_LEVEL_QUICK_BATTLE, DailiyQuickBattleCommand)
	arg_1_0.facade:registerCommand(GAME.CHAPTER_REMASTER_INFO_REQUEST, RemasterInfoRequestCommand)
	arg_1_0.facade:registerCommand(GAME.CHAPTER_REMASTER_AWARD_RECEIVE, RemasterAwardReceiveCommand)
	arg_1_0.facade:registerCommand(GAME.CHALLENGE2_INITIAL, Challenge2InitialRequestCommand)
	arg_1_0.facade:registerCommand(GAME.CHALLENGE2_RESET, Challenge2ResetRequestCommand)
	arg_1_0.facade:registerCommand(GAME.CHALLENGE2_INFO, Challenge2InfoRequestCommand)
	arg_1_0.facade:registerCommand(GAME.CHALLENGE2_SETTLE, Challenge2SettleRequestCommand)
	arg_1_0.facade:registerCommand(GAME.FETCH_NPC_SHIP, FetchNpcShipCommand)
	arg_1_0.facade:registerCommand(GAME.GET_SEASON_INFO, GetSeasonInfoCommand)
	arg_1_0.facade:registerCommand(GAME.REPLACE_RIVALS, ReplaceRivalsCommand)
	arg_1_0.facade:registerCommand(GAME.REFRESH_MILITARY_SHOP, RefreshMilitaryShopCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_EXERCISE_FLEET, UpdateExerciseFleetCommand)
	arg_1_0.facade:registerCommand(GAME.EXERCISE_COUNT_RECOVER_UP, ExerciseCountRecoverUpCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MILITARY_SHOP, GetMilitaryShopCommand)
	arg_1_0.facade:registerCommand(GAME.GET_RIVAL_INFO, GetRivalInfoCommand)
	arg_1_0.facade:registerCommand(GAME.GET_POWERRANK, GetPowerRankCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_VISITOR_SHIP, GetBackYardVisitorCommand)
	arg_1_0.facade:registerCommand(GAME.ADD_FOOD, AddFoodCommand)
	arg_1_0.facade:registerCommand(GAME.BUY_FURNITURE, BuyFurnitureCommand)
	arg_1_0.facade:registerCommand(GAME.ADD_SHIP, AddShipCommand)
	arg_1_0.facade:registerCommand(GAME.EXIT_SHIP, ShipExitCommand)
	arg_1_0.facade:registerCommand(GAME.PUT_FURNITURE, PutFurnitureCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_ADD_EXP, BackYardShipAddExpCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_ADD_INTIMACY, ShipAddInimacyCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_ADD_MONEY, ShipAddMoneyCommand)
	arg_1_0.facade:registerCommand(GAME.OPEN_ADD_EXP, BackYardOpenAddExpCommand)
	arg_1_0.facade:registerCommand(GAME.EXTEND_BACKYARD_AREA, ExtendBackYardAreaCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_RENAME, BackYardRenameCommand)
	arg_1_0.facade:registerCommand(GAME.GET_DORMTHEME, GetDormThemeListCommand)
	arg_1_0.facade:registerCommand(GAME.GET_BACKYARD_DATA, GetBackYardDataCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CANPUT_FURNITURES_FOR_THEME, GetCanBePutFurnituresForThemeCommand)
	arg_1_0.facade:registerCommand(GAME.GET_ALL_BACKYARD_THEME_TEMPLATE, GetAllBackYardThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_LIKE_THEME_TEMPLATE, BackYardLikeThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_COLLECT_THEME_TEMPLATE, BackYardCollectThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_THEME_TEMPLATE, BackYardGetThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_THEME_TEMPLATE_PLAYE_INFO, GetThemeTemplatePlayerInfoCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_UNLOAD_THEME_TEMPLATE, BackYardUnloadThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_UPLOAD_THEME_TEMPLATE, BackYardUploadThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_APPLY_THEME_TEMPLATE, BackYardApplyThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_SEARCH_THEME_TEMPLATE, BackYardSeachThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_DELETE_THEME_TEMPLATE, BackYardDeleteThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_SAVE_THEME_TEMPLATE, AddBackYardThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_THEME_TEMPLATE_DATA, BackYardGetThemeTemplateDataCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_REFRESH_SHOP_TEMPLATE, BackYardRefreshShopTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.INFORM_THEME_TEMPLATE, InformBackYardThemeTemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_SPECIFIED_TYPE_TEMPLATE, BackYardGetSpecifiedTypeThemplateCommand)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_GET_IMG_MD5, BackYardGetPreviewImageMd5Command)
	arg_1_0.facade:registerCommand(GAME.BACKYARD_ONE_KEY, ShipAddIntimacyAndMoneyCommand)
	arg_1_0.facade:registerCommand(GAME.SHOPPING, ShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.EXTEND, ExtendCommand)
	arg_1_0.facade:registerCommand(GAME.FRAG_SHOPPING, FragmentShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.FRAG_SELL, FragmentSellCommand)
	arg_1_0.facade:registerCommand(GAME.GET_OPEN_SHOPS, GetOpeningUpShopCommand)
	arg_1_0.facade:registerCommand(GAME.SKIN_SHOPPIGN, SkinShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.SKIN_COUPON_SHOPPING, SkinCoupunShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.RECORD_SKIN_ANIM_PREVIEW, RecordSkinAnimPreviwBtnUsageCommand)
	arg_1_0.facade:registerCommand(GAME.USE_ITEM, UseItemCommand)
	arg_1_0.facade:registerCommand(GAME.USE_ADD_SHIPEXP_ITEM, UseAddShipExpCommand)
	arg_1_0.facade:registerCommand(GAME.USE_FUDAI_ITEM, UseFudaiItemCommand)
	arg_1_0.facade:registerCommand(GAME.COMPOSE_ITEM, ComposeItemCommand)
	arg_1_0.facade:registerCommand(GAME.EXCHANGE_LOVE_LETTER_ITEM, ExchangeLoveLetterItem)
	arg_1_0.facade:registerCommand(GAME.GET_FEAST_DATA, GetFeastDataCommand)
	arg_1_0.facade:registerCommand(GAME.FEAST_OP, FeastOpCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MAIL_LIST, GetMailListCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MAIL_LIST_TO_INDEX, GetMailListToIndexCommand)
	arg_1_0.facade:registerCommand(GAME.GET_COLLECTION_MAIL_LIST, GetCollectionMailListCommand)
	arg_1_0.facade:registerCommand(GAME.DEAL_MAIL_OPERATION, DealMailOperationCommand)
	arg_1_0.facade:registerCommand(GAME.DELETE_COLLECTION_MAIL, DeleteCollectionMailCommand)
	arg_1_0.facade:registerCommand(GAME.GET_STORE_RES, GetStoreResCommand)
	arg_1_0.facade:registerCommand(GAME.EXTEND_STORE_CAPACITY, ExtendStoreCapacityCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MAIL_TITLE_LIST, GetMailTitleCommand)
	arg_1_0.facade:registerCommand(GAME.SEND_MSG, SendMsgCommand)
	arg_1_0.facade:registerCommand(GAME.SEND_CMD, SendCmdCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_CHAT_ROOM, ChangeChatRoomCommand)
	arg_1_0.facade:registerCommand(GAME.SUBMIT_TASK, SubmitTaskCommand)
	arg_1_0.facade:registerCommand(GAME.TRIGGER_TASK, TriggerTaskCommand)
	arg_1_0.facade:registerCommand(GAME.QUICK_TASK, QuickTaskCommand)
	arg_1_0.facade:registerCommand(GAME.TASK_GO, TaskGoCommand)
	arg_1_0.facade:registerCommand(GAME.ACCEPT_ACTIVITY_TASK, AcceptActivityTaskCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_TASK_PROGRESS, UpdateTaskProgressCommand)
	arg_1_0.facade:registerCommand(GAME.SUBMIT_TASK_ONESTEP, SubmitTaskOneStepCommand)
	arg_1_0.facade:registerCommand(GAME.SUBMIT_WEEK_TASK, SubmitWeekTaskCommand)
	arg_1_0.facade:registerCommand(GAME.BATCH_SUBMIT_WEEK_TASK, BatchSubmitWeekTaskCommand)
	arg_1_0.facade:registerCommand(GAME.SUBMIT_WEEK_TASK_PROGRESS, SubmitWeekTaskProgressCommand)
	arg_1_0.facade:registerCommand(GAME.MERGE_TASK_ONE_STEP_AWARD, MergeTaskOneStepAwardCommand)
	arg_1_0.facade:registerCommand(GAME.TASK_PROGRESS_UPDATE, TaskProgressUpdateCommand)
	arg_1_0.facade:registerCommand(GAME.ADD_ITEM, AddItemCommand)
	arg_1_0.facade:registerCommand(GAME.CONSUME_ITEM, ConsumeItemCommand)
	arg_1_0.facade:registerCommand(GAME.START_TO_LEARN_TACTICS, StartLearnTacticsCommand)
	arg_1_0.facade:registerCommand(GAME.CANCEL_LEARN_TACTICS, CancelLearnTacticsCommand)
	arg_1_0.facade:registerCommand(GAME.QUICK_FINISH_LEARN_TACTICS, QuickFinsihLearnTacticsCommand)
	arg_1_0.facade:registerCommand(GAME.GET_SHOPSTREET, GetShopStreetCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MEDALSHOP, GetMedalShopCommand)
	arg_1_0.facade:registerCommand(GAME.ON_MEDAL_SHOP_PURCHASE, MedalShopCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_SEARCH, SearchFriendCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_DELETE, DeleteFriendCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_SEND_REQUEST, SendFriendRequestCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_SEND_MSG, SendFriendMsgCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_FETCH_MSG, FetchFriendMsgCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_ACCEPT_REQUEST, AcceptFriendRequestCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_REJECT_REQUEST, RejectFriendRequestCommand)
	arg_1_0.facade:registerCommand(GAME.VISIT_BACKYARD, VisitBackYardCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_RELIEVE_BLACKLIST, RelieveBlackListCommand)
	arg_1_0.facade:registerCommand(GAME.FRIEND_ADD_BLACKLIST, AddBlackListCommand)
	arg_1_0.facade:registerCommand(GAME.GET_BLACK_LIST, GetBlackListCommand)
	arg_1_0.facade:registerCommand(GAME.INFORM, InformCommand)
	arg_1_0.facade:registerCommand(GAME.CHARGE_OPERATION, ChargeCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CHARGE_LIST, GetChargeListCommand)
	arg_1_0.facade:registerCommand(GAME.CHARGE_SUCCESS, ChargeSuccessCommand)
	arg_1_0.facade:registerCommand(GAME.CHARGE_CONFIRM, ChargeConfirmCommand)
	arg_1_0.facade:registerCommand(GAME.CLICK_MING_SHI, ClickMingShiCommand)
	arg_1_0.facade:registerCommand(GAME.CHARGE_FAILED, ChargeFailedCommand)
	arg_1_0.facade:registerCommand(GAME.REFUND_CHHARGE, RefundChargeCommand)
	arg_1_0.facade:registerCommand(GAME.CREATE_GUILD, CreateGuildCommand)
	arg_1_0.facade:registerCommand(GAME.MODIFY_GUILD_INFO, ModifyGuildInfoCommand)
	arg_1_0.facade:registerCommand(GAME.SET_GUILD_DUTY, SetGuildDutyCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_FIRE, GuildFireCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_QUIT, GuildQuitCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_DISSOLVE, GuildDissolveCommand)
	arg_1_0.facade:registerCommand(GAME.GUIDL_REQUEST_ACCEPT, GuildRequestAcceptCommand)
	arg_1_0.facade:registerCommand(GAME.GUIDL_REQUEST_REJECT, GuildRequestRejectCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_LIST_REFRESH, GuildsRefreshCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_SEARCH, GuildSearchCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_APPLY, GuildApplyCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_IMPEACH, GuildImpeachCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_REQUEST_LIST, GetGuildRequestsCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_SEND_MSG, GuildSendMsgCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_SHOP, GetGuildShopCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_RANK, GetGuildRankCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_CHAT_LIST, GetGuildChatListCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_FETCH_CAPITAL_LOG, GuildFetchCapitalLogCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_COMMIT_DONATE, GuildCommitDonateCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_SELECT_TASK, GuildSelectWeeklyTaskCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_SUPPLY_AWARD, GuildGetSupplyAwardCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_BUY_SUPPLY, GuildBuySupplyCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_START_TECH, GuildStartTechCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_START_TECH_TASK, GuildStartTechGroupCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_USER_INFO, GuildGetUserInfoCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_WEEKLY_TASK_PROGREE_UPDATE, GuildFetchWeeklyTaskProgreeCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_REFRESH_CAPITAL, GuildFetchCapitalCommand)
	arg_1_0.facade:registerCommand(GAME.ON_GUILD_SHOP_PURCHASE, GuildShopCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_CANCEL_TECH, GuildCancelTechCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_INFO, GetGuildInfoCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_RANK, GetGuildRankCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_ACTIVE_EVENT, GuildActiveEventCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_ACTIVATION_EVENT, GuildGetActivationEventCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_REPORT, GuildGetReportsCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_REPORT_RANK, GuildGetReportRankCommand)
	arg_1_0.facade:registerCommand(GAME.SUBMIT_GUILD_REPORT, SubmitGuildReportCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_ASSAULT_FLEET, GuildGetAssaultFleetCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_MY_ASSAULT_FLEET, GetMyAssaultFleetCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_UPDATE_MY_ASSAULT_FLEET, GuildUpdateAssaultFleetCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_JOIN_MISSION, GuildJoinMissionCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_REFRESH_MISSION, GuildRefreshMissionCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_UPDATE_NODE_ANIM_FLAG, GuildUpdateNodeAnimFlagCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_GET_BOSS_INFO, GetGuildBossInfoCommand)
	arg_1_0.facade:registerCommand(GAME.GET_GUILD_BOSS_RANK, GetGuildBossRankCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_UPDATE_BOSS_FORMATION, GuildUpdateBossMissionFleetCommand)
	arg_1_0.facade:registerCommand(GAME.ON_GUILD_JOIN_EVENT, GuildJoinEventCommand)
	arg_1_0.facade:registerCommand(GAME.GUILD_RECOMMAND_ASSULT_SHIP, MarkAssultShipRecommandCommand)
	arg_1_0.facade:registerCommand(GAME.REFRESH_ALL_ASSULT_SHIP_RECOMMAND_STATE, GuildRefreshRecommandShipCommand)
	arg_1_0.facade:registerCommand(GAME.GET_PUBLIC_GUILD_USER_DATA, GetPublicGuildUserDataCommand)
	arg_1_0.facade:registerCommand(GAME.PUBLIC_GUILD_COMMIT_DONATE, PublicGuildCommitDonateCommand)
	arg_1_0.facade:registerCommand(GAME.PULIC_GUILD_UPGRADE_TECH, PublicGuildUpgradeTechCommand)
	arg_1_0.facade:registerCommand(GAME.HANDLE_GUILD_AND_PUBLIC_GUILD_TECH, HandleGuildAndPublicGuildTechCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_ON_OPEN_BOX, GetCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_ON_BUILD, BuildCommaderCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_RESET_TALENTS, ResetCommanderTalentsCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_LEARN_TALENTS, CommanderLearnTalentCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_FETCH_NOT_LEARNED_TALENT, FetchCommanderTalentCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_UPGRADE, UpgradeCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.COOMMANDER_EQUIP_TO_FLEET, EquipCommanderToFleetCommande)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_LOCK, LockCommanderCommande)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_RESERVE_BOX, ReserveCommanderBoxCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_RENAME, RenameCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.SET_COMMANDER_PREFAB, SetComanderPrefabFleetCommand)
	arg_1_0.facade:registerCommand(GAME.SET_COMMANDER_PREFAB_NAME, SetCommanderPrefabFleetNameCommand)
	arg_1_0.facade:registerCommand(GAME.USE_COMMANDER_PREFBA, CommanderUsePrefabCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_FORMATION_OP, CommanderFormationOPCommand)
	arg_1_0.facade:registerCommand(GAME.SELECT_ELIT_CHAPTER_COMMANDER, SelectEliteCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.SELECT_FLEET_COMMANDER, SelectFleetCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.REMOVE_ELITE_TARGET_SHIP, RemoveEliteTargerShipCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_ON_BATCH, BatchGetCommanderCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_CATTERY_OP, CommanderCatteryOPCommand)
	arg_1_0.facade:registerCommand(GAME.GET_COMMANDER_HOME, GetCommanderHomeCommand)
	arg_1_0.facade:registerCommand(GAME.PUT_COMMANDER_IN_CATTERY, PutCommanderInCatteryCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_CHANGE_CATTERY_STYLE, CommanderChangeCatteryStyleCommand)
	arg_1_0.facade:registerCommand(GAME.CALC_CATTERY_EXP, CalcCatteryExpCommand)
	arg_1_0.facade:registerCommand(GAME.REFRESH_COMMANDER_BOXES, RefreshCommanderBoxesCommand)
	arg_1_0.facade:registerCommand(GAME.OPEN_OR_CLOSE_CATTERY, OpenOrCloseCatteryCommand)
	arg_1_0.facade:registerCommand(GAME.COMMANDER_QUICKLY_FINISH_BOXES, CommanderQuicklyFinishBoxesCommand)
	arg_1_0.facade:registerCommand(GAME.COLLECT_GET_AWARD, CollectionGetAwardCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_GALLERY_UNLOCK, GalleryUnlockCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_MUSIC_UNLOCK, MusicUnlockCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_GALLERY_LIKE, GalleryLikeCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_MUSIC_LIKE, MusicLikeCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_MANGA_READ, MangaReadCommand)
	arg_1_0.facade:registerCommand(GAME.APPRECIATE_MANGA_LIKE, MangaLikeCommand)
	arg_1_0.facade:registerCommand(GAME.TROPHY_CLAIM, TrophyClaimCommand)
	arg_1_0.facade:registerCommand(GAME.EVENT_FINISH, EventFinishCommand)
	arg_1_0.facade:registerCommand(GAME.EVENT_FLUSH_NIGHT, EventFlushCommand)
	arg_1_0.facade:registerCommand(GAME.EVENT_START, EventStartCommand)
	arg_1_0.facade:registerCommand(GAME.EVENT_GIVEUP, EventGiveUpCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_OPERATION, ActivityOperationCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_BOSS_PAGE_UPDATE, ActivityBossPageUpdateCommond)
	arg_1_0.facade:registerCommand(GAME.GET_ACTIVITY_SHOP, GetActivityShopCommand)
	arg_1_0.facade:registerCommand(GAME.MONOPOLY_OP, MonopolyOPCommand)
	arg_1_0.facade:registerCommand(GAME.EDIT_ACTIVITY_FLEET, EditActivityFleetCommand)
	arg_1_0.facade:registerCommand(GAME.BLACK_WHITE_GRID_OP, BlackWhiteGridOPCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_NEW_PT, ActivityNewPtOPCommand)
	arg_1_0.facade:registerCommand(GAME.MEMORYBOOK_UNLOCK, ActivityMemoryOPCommand)
	arg_1_0.facade:registerCommand(GAME.RETURN_AWARD_OP, ReturnAwardOPCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_BE_UPDATED, ActivityBeUpdatedCommand)
	arg_1_0.facade:registerCommand(GAME.ON_NEW_VOTE, VoteCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_BOSS_NORMAL_UPDATE, ActivityBossNormalUpdateCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_BOSS_EXCHANGE_TICKET, ActivityBossExchangeTicketCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_INSTAGRAM_OP, InstagramActivityCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_INSTAGRAM_FETCH, InstagramFetchCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_BEAT_MONSTER_NIAN, ActivityBeatMonsterNianCommand)
	arg_1_0.facade:registerCommand(GAME.PUZZLE_PIECE_OP, ActivityPuzzlePicecOPCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_BUILD_POOL_EXCHANGE, BuildPoolExchangeCommand)
	arg_1_0.facade:registerCommand(GAME.REGULAR_BUILD_POOL_EXCHANGE, BuildPoolRegularExchangeCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_COLLECTION_EVENT_OP, ActivityCollectionEventCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_SHOP_PROGRESS_REWARD, ActivityShopWithProgressRewardCommand)
	arg_1_0.facade:registerCommand(GAME.WORLDIN_PICTURE_OP, ActivityWorldInPictureCommand)
	arg_1_0.facade:registerCommand(GAME.GET_NEW_SERVER_SHOP, GetNewServerShopCommand)
	arg_1_0.facade:registerCommand(GAME.NEW_SERVER_SHOP_SHOPPING, NewServerShopShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.SCULPTURE_ACT_OP, SculptureActivityOpCommand)
	arg_1_0.facade:registerCommand(GAME.GRAFTING_ACT_OP, GraftingActivityOpCommand)
	arg_1_0.facade:registerCommand(GAME.SYN_GRAFTING_ACTIVITY, SynGraftingActivityCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_CARD_PUZZLE, ActivityCardPuzzleCombatCommand)
	arg_1_0.facade:registerCommand(GAME.CASTLE_ACT_OP, CastleActivityCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_MANUAL_SIGN, ActivityManualSignCommand)
	arg_1_0.facade:registerCommand(GAME.SENRANKAGURA_TRAIN_ACT_OP, SenrankaguraTrainCommand)
	arg_1_0.facade:registerCommand(GAME.ACT_RANDOM_DAILY_TASK, ActivityRandomDailyTaskCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_STORE_DATE, ActivityStoreDataCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_LINER_OP, ActivityLinerOPCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_PERMANENT_START, ActivityPermanentStartCommand)
	arg_1_0.facade:registerCommand(GAME.ACTIVITY_PERMANENT_FINISH, ActivityPermanentFinishCommand)
	arg_1_0.facade:registerCommand(GAME.SHAM_SHOPPING, ShamShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.QUOTA_SHOPPING, QuotaShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.FETCH_VOTE_INFO, FetchVoteInfoCommand)
	arg_1_0.facade:registerCommand(GAME.FETCH_VOTE_RANK, FetchVoteRankCommand)
	arg_1_0.facade:registerCommand(GAME.CLASS_START_COURSE, StartToLearnCommand)
	arg_1_0.facade:registerCommand(GAME.CLASS_STOP_COURSE, EndToLearnCommand)
	arg_1_0.facade:registerCommand(GAME.START_TECHNOLOGY, StartTechnologyCommand)
	arg_1_0.facade:registerCommand(GAME.FINISH_TECHNOLOGY, FinishTechnologyCommand)
	arg_1_0.facade:registerCommand(GAME.STOP_TECHNOLOGY, StopTechnologyCommand)
	arg_1_0.facade:registerCommand(GAME.JOIN_QUEUE_TECHNOLOGY, JoinQueueTechnologyCommand)
	arg_1_0.facade:registerCommand(GAME.FINISH_QUEUE_TECHNOLOGY, FinishQueueTechnologyCommand)
	arg_1_0.facade:registerCommand(GAME.REFRESH_TECHNOLOGYS, RefreshTechnologysCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_REFRESH_TECHNOLOGYS_TENDENCY, ChangeRefreshTechnologysTendencyCommand)
	arg_1_0.facade:registerCommand(GAME.SELECT_TEC_TARGET_CATCHUP, SelectTecTargetCatchupCommand)
	arg_1_0.facade:registerCommand(GAME.RESELECT_TEC_TARGET_CATCHUP, ReSelectTecTargetCatchupCommand)
	arg_1_0.facade:registerCommand(GAME.USE_TEC_SPEEDUP_ITEM, UseTecSpeedUpItemCommand)
	arg_1_0.facade:registerCommand(GAME.BUILD_SHIP_BLUEPRINT, BuildShipBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.FINISH_SHIP_BLUEPRINT, FinishBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.ITEM_LOCK_SHIP_BLUPRINT, ItemUnlockBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.MOD_BLUEPRINT, ModBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.PURSUING_BLUEPRINT, PursuingBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.STOP_BLUEPRINT, StopBluePrintCommand)
	arg_1_0.facade:registerCommand(GAME.QUICK_EXCHANGE_BLUEPRINT, QuickExchangeBlueprintCommand)
	arg_1_0.facade:registerCommand(GAME.START_CAMP_TEC, StartCampTecCommand)
	arg_1_0.facade:registerCommand(GAME.FINISH_CAMP_TEC, FinishCampTecCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CAMP_TEC_AWARD, AwardCampTecCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CAMP_TEC_AWARD_ONESTEP, AwardCampTecOneStepCommand)
	arg_1_0.facade:registerCommand(GAME.SET_TEC_ATTR_ADDITION, SetTecAttrAdditionCommand)
	arg_1_0.facade:registerCommand(GAME.REPAIR_META_CHARACTER, MetaCharacterRepairCommand)
	arg_1_0.facade:registerCommand(GAME.ENERGY_META_ACTIVATION, MetaCharActiveEnergyCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_EXP_META_INFO_REQUEST, MetaCharacterTacticsInfoRequestCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_META_INFO_REQUEST, MetaCharacterTacticsRequestCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_META_UNLOCK_SKILL, MetaCharacterTacticsUnlockCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_META_SWITCH_SKILL, MetaCharacterTacticsSwitchCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_META_LEVELUP_SKILL, MetaCharacterTacticsLevelUpCommand)
	arg_1_0.facade:registerCommand(GAME.TACTICS_META_LEVELMAX_SHOW_BOX, MetaCharacterLevelMaxBoxShowCommand)
	arg_1_0.facade:registerCommand(GAME.REQUEST_META_PT_DATA, MetaPTDataRequestCommand)
	arg_1_0.facade:registerCommand(GAME.GET_META_PT_AWARD, MetaPTAwardGetCommand)
	arg_1_0.facade:registerCommand(GAME.ON_META_SHOPPING, MetaShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.META_QUICK_TACTICS, MetaQuickTacticsCommand)
	arg_1_0.facade:registerCommand(GAME.COLORING_CELL, ColoringCellCommand)
	arg_1_0.facade:registerCommand(GAME.COLORING_ACHIEVE, ColoringAchieveCommand)
	arg_1_0.facade:registerCommand(GAME.COLORING_CLEAR, ColoringClearCommand)
	arg_1_0.facade:registerCommand(GAME.COLORING_FETCH, ColoringFetchCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ACTIVATE, WorldActivateCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_MAP_REQ, WorldMapReqCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_MAP_OP, WorldMapOpCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_STAMINA_EXCHANGE, WorldStaminaExchangeCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_KILL, WorldKillCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_TRIGGER_TASK, WorldTriggerTaskCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_TRIGGER_DAILY_TASK, WorldTriggerDailyTaskCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_SUMBMIT_TASK, WorldSubmitTaskCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_AUTO_SUMBMIT_TASK, WorldAutoSubmitTaskCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ITEM_USE, WorldItemUseCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_PORT_REQ, WorldPortReqCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_PORT_SHOPPING, WorldPortShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_PORT_NEW_SHOPPING, WorldPortNewShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_SHIP_REPAIR, WorldShipRepairCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_FLEET_REDEPLOY, WorldFleetRedeployCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ACHIEVE, WorldAchieveCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_GET_BOSS, GetWorldBossCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_GET_BOSS_RANK, GetWBDamageRankCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_SUPPORT, WorldBossSupportCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_PT_RECOVER, WorldBossPtRecoverCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_SUBMIT_AWARD, SubmitWBAwardCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_START_BATTLE, WorldBossStartBattleCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_SELF_BOSS_OVERTIME, WorldBossOverTimeCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ACTIVE_WORLD_BOSS, ActiveWorldBossCommand)
	arg_1_0.facade:registerCommand(GAME.CHECK_WORLD_BOSS_STATE, CheckWorldBossStateCommand)
	arg_1_0.facade:registerCommand(GAME.GET_CACHE_BOSS_HP, GetCacheBossHpCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_BATTLE_QUIT, WorldBossBattleQuitCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_BOSS_GET_FORMATION, WorldBossGetOtherFormationCommand)
	arg_1_0.facade:registerCommand(GAME.SWITCH_WORLD_BOSS_ARCHIVES, SwitchWorldBossArchivesCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ARCHIVES_BOSS_AUTO_BATTLE, WorldBossArchivesAutoBattleCommand)
	arg_1_0.facade:registerCommand(GAME.WORLD_ARCHIVES_BOSS_STOP_AUTO_BATTLE, WorldBossArchivesStopAutoBattleCommand)
	arg_1_0.facade:registerCommand(GAME.EXCHANGECODE_USE, ExchangeCodeUseCommand)
	arg_1_0.facade:registerCommand(GAME.STORY_UPDATE, UpdateStoryCommand)
	arg_1_0.facade:registerCommand(GAME.MONTH_CARD_SET_RATIO, SetMonthCardRatioCommand)
	arg_1_0.facade:registerCommand(GAME.TIME_SYNCHRONIZATION, TimeSynchronizationCommand)
	arg_1_0.facade:registerCommand(GAME.GET_REMASTER_TICKETS, GetRemasterCommand)
	arg_1_0.facade:registerCommand(PrayPoolConst.BUILD_PRAY_POOL_CMD, PrayPoolBuildCommand)
	arg_1_0.facade:registerCommand(GAME.REQUEST_EMOJI_INFO_FROM_SERVER, EmojiInfoRequestCommand)
	arg_1_0.facade:registerCommand(GAME.FETCH_PASSWORD_STATE, FetchSecondaryPasswordCommand)
	arg_1_0.facade:registerCommand(GAME.SET_PASSWORD, SetSecondaryPasswordCommand)
	arg_1_0.facade:registerCommand(GAME.SET_PASSWORD_SETTINGS, SetSecondaryPasswordSettingsCommand)
	arg_1_0.facade:registerCommand(GAME.CONFIRM_PASSWORD, ConfirmSecondaryPasswordCommand)
	arg_1_0.facade:registerCommand(GAME.SEND_MINI_GAME_OP, MiniGameOPCommand)
	arg_1_0.facade:registerCommand(GAME.REQUEST_MINI_GAME, MiniGameRequestCommand)
	arg_1_0.facade:registerCommand(GAME.MODIFY_MINI_GAME_DATA, MiniGameModifyDataCommand)
	arg_1_0.facade:registerCommand(GAME.MINI_GAME_TIME, MiniGameTimeCommand)
	arg_1_0.facade:registerCommand(GAME.MINI_GAME_FRIEND_RANK, MiniGameFriendRankCommand)
	arg_1_0.facade:registerCommand(GAME.GET_OSS_ARGS, GetOSSArgsCommand)
	arg_1_0.facade:registerCommand(GAME.CHECK_HOTFIX_VER, CheckHotfixCommand)
	arg_1_0.facade:registerCommand(GAME.EXTRA_PROTO_RESULT, ExtraProtoResultCommand)
	arg_1_0.facade:registerCommand(GAME.GET_REFUND_INFO, GetRefundInfoCommand)
	arg_1_0.facade:registerCommand(GAME.ACCOUNT_SEARCH, AccountSearchCommand)
	arg_1_0.facade:registerCommand(GAME.CRUSING_CMD, ActivityCrusingOPCommand)
	arg_1_0.facade:registerCommand(GAME.CRUSING_LAST_TIME_MSGBOX, ActivityCrusingLastTimeCommand)
	arg_1_0.facade:registerCommand(GAME.COMPOSITE_SPWEAPON, CompositeSpWeaponCommand)
	arg_1_0.facade:registerCommand(GAME.UPGRADE_SPWEAPON, UpgradeSpWeaponCommand)
	arg_1_0.facade:registerCommand(GAME.REFORGE_SPWEAPON, ReforgeSpWeaponCommand)
	arg_1_0.facade:registerCommand(GAME.CONFIRM_REFORGE_SPWEAPON, ConfirmReforgeSpWeaponCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_SPWEAPON_TO_SHIP, UpdateShipSpWeaponCommand)
	arg_1_0.facade:registerCommand(GAME.EQUIP_SPWEAPON_FROM_SHIP, EquipSpWeaponFromShipCommand)
	arg_1_0.facade:registerCommand(GAME.AVATAR_FRAME_AWARD, AvatarFrameAwardCommand)
	arg_1_0.facade:registerCommand(GAME.REFLUX_REQUEST_DATA, RefluxRequestDataCommand)
	arg_1_0.facade:registerCommand(GAME.REFLUX_SIGN, RefluxSignCommand)
	arg_1_0.facade:registerCommand(GAME.REFLUX_GET_PT_AWARD, RefluxGetPTAwardCommand)
	arg_1_0.facade:registerCommand(GAME.REQUEST_ATELIER, AtelierRequestCommand)
	arg_1_0.facade:registerCommand(GAME.COMPOSITE_ATELIER_RECIPE, AtelierCompositeCommand)
	arg_1_0.facade:registerCommand(GAME.UPDATE_ATELIER_BUFF, AtelierRefreshBuffCommand)
	arg_1_0.facade:registerCommand(GAME.BOSSRUSH_TRACE, BossRushTracingCommand)
	arg_1_0.facade:registerCommand(GAME.BOSSRUSH_SETTLE, BossRushSettlementCommand)
	arg_1_0.facade:registerCommand(GAME.WORKBENCH_COMPOSITE, WorkBenchCompositeCommand)
	arg_1_0.facade:registerCommand(GAME.WORKBENCH_ITEM_GO, WorkBenchItemGoCommand)
	arg_1_0.facade:registerCommand(GAME.SURVEY_REQUEST, SurveyCommand)
	arg_1_0.facade:registerCommand(GAME.GET_SURVEY_STATE, SurveyStateCommand)
	arg_1_0.facade:registerCommand(GAME.REQUEST_NODE_LIST, IslandRequestCommand)
	arg_1_0.facade:registerCommand(GAME.ISLAND_NODE_MARK, IslandNodeMarkCommand)
	arg_1_0.facade:registerCommand(GAME.ISLAND_EVENT_TRIGGER, IslandEventTriggerCommand)
	arg_1_0.facade:registerCommand(GAME.ISLAND_SHOPPING, IslandShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.ISLAND_FLOWER_GET, IslandFlowerFieldGetAwardCommand)
	arg_1_0.facade:registerCommand(GAME.ISLAND_TASK_GO, IslandTaskGoCommand)
	arg_1_0.facade:registerCommand(GAME.GET_MINI_GAME_SHOP, GetMiniGameShopCommand)
	arg_1_0.facade:registerCommand(GAME.MINI_GAME_SHOP_FLUSH, MiniGameShopFlushCommand)
	arg_1_0.facade:registerCommand(GAME.MINI_GAME_SHOP_BUY, MiniGameShopBuyCommand)
	arg_1_0.facade:registerCommand(GAME.GAME_ROOM_WEEK_COIN, GameRoomWeekCoinCommand)
	arg_1_0.facade:registerCommand(GAME.GAME_ROOM_FIRST_COIN, GameRoomFirstCoinCommand)
	arg_1_0.facade:registerCommand(GAME.GAME_ROOM_EXCHANGE_COIN, GameRoomExchangeCoinCommand)
	arg_1_0.facade:registerCommand(GAME.GAME_ROOM_SUCCESS, GameRoomSuccessCommand)
	arg_1_0.facade:registerCommand(LimitChallengeConst.REQ_CHALLENGE_INFO, LimitChallengeReqCommand)
	arg_1_0.facade:registerCommand(LimitChallengeConst.GET_CHALLENGE_AWARD, LimitChallengeGetAwardCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_REQUEST, EducateRequestCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_SET_CALL, EducateSetCallCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_ADD_EXTRA_ATTR, EducateAddExtraAttrCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_GET_PLANS, EducateGetPlansCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_EXECUTE_PLANS, EducateExecutePlansCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_MAP_SITE, EducateMapSiteCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_REQUEST_OPTION, EducateRequestOptionCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_SET_TARGET, EducateSetTargetCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_GET_TARGET_AWARD, EducateGetTargetAwardCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_SUBMIT_TASK, EducateSubmitTaskCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_ADD_TASK_PROGRESS, EducateAddTaskProgressCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_UPGRADE_FAVOR, EducateUpgradeFavorCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_GET_EVENTS, EducateGetEventsCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_TRIGGER_EVENT, EducateTriggerEventCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_TRIGGER_SPEC_EVENT, EducateTriggerSpecEventCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_REQUEST_SHOP_DATA, EducateRequestShopDataCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_SHOPPING, EducateShoppingCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_TRIGGER_END, EducateTriggerEndCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_GET_ENDINGS, EducateGetEndingsCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_RESET, EducateResetCommand)
	arg_1_0.facade:registerCommand(GAME.EDUCATE_REFRESH, EducateRefreshCommand)
	arg_1_0.facade:registerCommand(GAME.CHANGE_EDUCATE, ChangeEducateCharacterCommand)
	arg_1_0.facade:registerCommand(GAME.SINGLE_EVENT_TRIGGER, SingleEventTriggerCommand)
	arg_1_0.facade:registerCommand(GAME.SINGLE_EVENT_REFRESH, SingleEventRefreshCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_TRIGGER_FAVOR, ApartmentTriggerFavorCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_LEVEL_UP, ApartmentLevelUpCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_GIVE_GIFT, ApartmentGiveGiftCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_REPLACE_FURNITURE, ApartmentReplaceFurnitureCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_CHANGE_SKIN, ApartmentChangeSkinCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_DO_TALK, ApartmentDoTalkCommand)
	arg_1_0.facade:registerCommand(GAME.APARTMENT_COLLECTION_ITEM, ApartmentCollectionItemCommand)
end

return var_0_0
